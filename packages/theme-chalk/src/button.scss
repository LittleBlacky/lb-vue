@use "common/vars" as v;
@use "sass:map";
@use "sass:color";
@use "mixins/mixins.scss" as mix;

@include mix.b(button) {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--lb-gap-small);
  line-height: 1;
  height: var(--lb-height-base);
  white-space: nowrap;
  cursor: pointer;
  background: var(--lb-bg-color);
  border: var(--lb-border);
  color: var(--lb-text-color-regular);
  -webkit-appearance: none;
  text-align: center;
  box-sizing: border-box;
  outline: none;
  margin: 0;
  // opacity: 0.4;
  transition: var(--lb-transition-duration);
  font-weight: var(--lb-font-weight-primary);
  padding: var(--lb-gap-small) var(--lb-gap-base);
  font-size: var(--lb-font-size-base);
  border-radius: var(--lb-border-radius-base);
  box-shadow: 0 2px #00000004;

  &:hover {
    color: var(--lb-color-primary);
    border-color: var(--lb-color-primary);
    background-color: var(--lb-color-primary-light-8);
    outline: none;
  }

  /*点击*/
  &:active {
    background-color: var(--lb-color-primary-light-6);
  }

  @include mix.when(disabled) {
    cursor: not-allowed;
    opacity: 0.6;
  }

  @include mix.when(plain) {
    background-color: transparent;
    color: var(--lb-text-color-regular);
    &:hover {
      color: var(--lb-color-primary);
    }
  }

  @include mix.when(text) {
    border-color: transparent;
    color: var(--lb-text-color-primary);
    background: transparent;
    padding-left: 0;
    padding-right: 0;

    &:hover,
    &:focus {
      color: var(--lb-text-color-regular);
    }
  }

  @include mix.when(link) {
    border-color: transparent;
    color: var(--lb-text-color-primary);
    background: transparent;
    padding-left: 0;
    padding-right: 0;

    &:hover,
    &:focus {
      color: var(--lb-text-color-regular);
    }
  }

  @each $type in map.keys(v.$colors) {
    @include mix.m(#{$type}) {
      color: var(--lb-color-white);
      background-color: var(--lb-color-#{$type});
      border-color: var(--lb-color-#{$type});

      &:hover {
        background: var(--lb-color-#{$type}-light-2);
        border-color: var(--lb-color-#{$type}-light-2);
        color: var(--lb-color-white);
      }

      &:active {
        background: var(--lb-color-#{$type}-light-4);
        border-color: var(--lb-color-#{$type}-light-4);
      }

      @include mix.when(plain) {
        background-color: var(--lb-color-#{$type}-light-8);
        border-color: var(--lb-color-#{$type});
        color: var(--lb-color-#{$type});

        &:hover {
          background-color: var(--lb-color-#{$type});
          border-color: var(--lb-color-#{$type});
          color: var(--lb-color-white);
        }

        &:active {
          background: var(--lb-color-#{$type}-light-4);
          border-color: var(--lb-color-#{$type}-light-4);
        }
      }

      @include mix.when(text) {
        border-color: transparent;
        color: var(--lb-color-#{$type});
        background: transparent;
        padding-left: 0;
        padding-right: 0;

      }

      @include mix.when(text) {
        border-color: transparent;
        color: var(--lb-color-#{$type});
        background: transparent;
        padding-left: 0;
        padding-right: 0;

        &:hover,
        &:focus {
          color: var(--lb-color-#{$type}-light-4);
        }
      }

      @include mix.when(link) {
        border-color: transparent;
        color: var(--lb-color-#{$type});
        background: transparent;

        &:hover,
        &:focus {
          color: var(--lb-color-#{$type}-light-4);
        }
      }
    }
  }

  @each $size in (small, base, large) {
    @include mix.m(#{$size}) {
      @if $size == small {
        height: var(--lb-height-small);
        padding: var(--lb-gap-extra-small) var(--lb-gap-small);
        font-size: var(--lb-font-size-small);
        border-radius: var(--lb-border-radius-small);
      } @else if $size == base {
        height: var(--lb-height-base);
        padding: var(--lb-gap-small) var(--lb-gap-base);
        font-size: var(--lb-font-size-base);
        border-radius: var(--lb-border-radius-base);
      } @else if $size == large {
        height: var(--lb-height-large);
        padding: var(--lb-gap-base) var(--lb-gap-large);
        font-size: var(--lb-font-size-large);
        border-radius: var(--lb-border-radius-base);
      }
    }
  }

  @include mix.when(round) {
    border-radius: var(--lb-border-radius-round);
  }

  @include mix.when(circle) {
    border-radius: 50%;
    width: var(--lb-height-base);
    height: var(--lb-height-base);
    padding: 0;
  }
}
